{"version":3,"sources":["Components/Landing/LandingPage.js","Components/Landing/Title.js","App.js","reportWebVitals.js","index.js"],"names":["LandingPage","this","floatySpace","window","addEventListener","removeEventListener","space","colors","CanvasSpace","setup","bgcolor","form","Form","pts","center","size","$divide","angle","innerWidth","count","line","Line","to","x","mouse","clone","r","Math","min","y","i","p","Vector","random","moveBy","rotate2D","PI","brightness","push","add","animate","time","fps","context","length","pt","Const","one_degree","stroke","fill","point","ln","getPerpendicularFromPoint","abs","getDistanceFromPoint","color","onMouseAction","type","evt","set","onTouchAction","bindMouse","play","id","class","width","height","style","React","Component","Title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.496d6300.chunk.js","sourcesContent":["import React from 'react';\r\nimport {CanvasSpace, Form, Line, Vector, Const} from 'ptjs';\r\n\r\nexport default class LandingPage extends React.Component {\r\n    componentWillMount() {\r\n        this.floatySpace();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.floatySpace();\r\n        window.addEventListener(\"resize\", this.floatySpace);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.floatySpace);\r\n    }\r\n\r\n    floatySpace() {\r\n        let space;\r\n        var colors = [\r\n            \"#FF3F8E\", \"#04C2C9\", \"#2E55C1\"\r\n          ];\r\n        \r\n        \r\n          // space = new CanvasSpace(\"canvas\", \"#252934\" ).display();\r\n          space = new CanvasSpace(\"canvas\").setup( {bgcolor: \"#252934\"} );\r\n          var form = new Form( space );\r\n        \r\n          // Elements\r\n          var pts = [];\r\n          var center = space.size.$divide(1.8);\r\n          var angle = -(window.innerWidth * 0.5);\r\n          var count = window.innerWidth * 0.05;\r\n          if (count > 150) count = 150;\r\n          var line = new Line(0, angle).to(space.size.x, 0);\r\n          var mouse = center.clone();\r\n        \r\n          var r = Math.min(space.size.x, space.size.y) * 1;\r\n          for (var i=0; i<count; i++) {\r\n            var p = new Vector( Math.random()*r-Math.random()*r, Math.random()*r-Math.random()*r );\r\n            p.moveBy( center ).rotate2D( i*Math.PI/count, center);\r\n            p.brightness = 0.1\r\n            pts.push( p );\r\n          }\r\n        \r\n          // Canvas\r\n          space.add({\r\n            animate: function(time, fps, context) {\r\n        \r\n              for (var i=0; i<pts.length; i++) {\r\n                // rotate the points slowly\r\n                var pt = pts[i];\r\n        \r\n                pt.rotate2D( Const.one_degree / 20, center);\r\n                form.stroke( false ).fill( colors[i % 3] ).point(pt, 1);\r\n        \r\n                // get line from pt to the mouse line\r\n                var ln = new Line( pt ).to( line.getPerpendicularFromPoint(pt));\r\n        \r\n                // opacity of line derived from distance to the line\r\n                // var opacity = Math.min( 0.8, 1 - Math.abs( line.getDistanceFromPoint(pt)) / r);\r\n                var distFromMouse = Math.abs(ln.getDistanceFromPoint(mouse))\r\n        \r\n                if (distFromMouse < 50) {\r\n                  if (pts[i].brightness < 0.3) pts[i].brightness += 0.015\r\n                } else {\r\n                  if (pts[i].brightness > 0.1) pts[i].brightness -= 0.01\r\n                }\r\n        \r\n                var color = \"rgba(255,255,255,\" + pts[i].brightness +\")\"\r\n                form.stroke(color).fill( true ).line(ln);\r\n              }\r\n            },\r\n        \r\n            onMouseAction: function(type, x, y, evt) {\r\n              if (type === \"move\") {\r\n                mouse.set(x,y);\r\n              }\r\n            },\r\n        \r\n            onTouchAction: function(type, x, y, evt) {\r\n              this.onMouseAction(type, x, y);\r\n            }\r\n          });\r\n        \r\n          space.bindMouse();\r\n          space.play();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"pt\" class=\"canvas\">\r\n                <canvas id=\"canvas\" width=\"1920\" height=\"1142\" style={{ width: \"1920px\", height: \"1142px\" }}></canvas>\r\n            </div>\r\n        );\r\n    }\r\n}","export default function Title() {\r\n    return(\r\n        <div class=\"title\">\r\n            <h1>Logan Young</h1>\r\n            <div class=\"subTitle\">\r\n                <h4>Full-Stack Developer</h4>\r\n                <h4 style={{ color: \"#fff\" }}>and</h4>\r\n                <h4>Network Engineer</h4>\r\n            </div>\r\n            <button class=\"learn\">Learn More</button>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport LandingPage from './Components/Landing/LandingPage';\nimport Title from './Components/Landing/Title';\n\nfunction App() {\n    return (\n        <section class=\"flex\">\n            <LandingPage />\n            <Title />\n        </section>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}